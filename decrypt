import java.math.BigInteger;
import java.nio.charset.StandardCharsets;

public class RSADecryption {

    public static void main(String[] args) {
        // Provided private key components
        BigInteger d = new BigInteger("3287248351");
        BigInteger n = new BigInteger("2251992033");

        // Given ciphertext
        BigInteger[] receivedCiphertext = {
                new BigInteger("1299420479"),
                new BigInteger("1760505387"),
                new BigInteger("692555224"),
                new BigInteger("1936256805"),
                new BigInteger("1402970726")
        };

        // Decrypt each integer number using the private key
        StringBuilder decryptedMessage = new StringBuilder();
        for (BigInteger chunk : receivedCiphertext) {
            BigInteger decryptedChunk = chunk.modPow(d, n);
            decryptedMessage.append(new String(decryptedChunk.toByteArray(), StandardCharsets.UTF_8));
        }

        // Print the decrypted message
        System.out.println("Decrypted Message: " + decryptedMessage.toString());
    }
}
